{"version":3,"file":"main.05a6c266d6b09bb5dad2.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AAJA;;AAQA;AAAA;AAAA;;AAAA;AAEA;AAAA;;AAGA;AACA;AACA;AACA;AAFA;AAQA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;ACrCA;AACA;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;;;AAqBA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AAEA;AAAA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAKA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AALA;AAdA;AADA;AA0BA;AArDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;;;AAWA;AAGA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAAA;AAAA;AAYA;;AApBA;AAsBA;;;;;;;;;;;;;;;;;;;;AClCA;AACA;AACA;;;AAUA;AAMA;AAAA;AAAA;AAAA;AAAA;;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AASA;AAzBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;;;AAQA;AAIA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAOA;AAlBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;;AASA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAjBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AACA;AAEA","sources":["webpack://alan-ui-library/./src/components/Modal/Modal.stories.tsx","webpack://alan-ui-library/./src/components/Button/index.ts","webpack://alan-ui-library/./src/components/Modal/Modal.tsx","webpack://alan-ui-library/./src/components/Modal/ModalContainer.tsx","webpack://alan-ui-library/./src/components/Modal/ModalFooter.tsx","webpack://alan-ui-library/./src/components/Modal/ModalHeader.tsx","webpack://alan-ui-library/./src/components/Typography/Title.tsx","webpack://alan-ui-library/./src/components/index.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from 'react';\\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\\n\\nimport { Modal } from './Modal';\\n\\n// More on default export: https://storybook.js.org/docs/react/writing-stories/introduction#default-export\\nexport default {\\n  title: 'Alan/Common/Modal',\\n  component: Modal,\\n  // More on argTypes: https://storybook.js.org/docs/react/api/argtypes\\n  argTypes: {},\\n} as ComponentMeta<typeof Modal>;\\n\\n// More on component templates: https://storybook.js.org/docs/react/writing-stories/introduction#using-args\\nconst Template: ComponentStory<typeof Modal> = (args) => <Modal {...args}/>;\\n\\nexport const Primary = Template.bind({});\\n// More on args: https://storybook.js.org/docs/react/writing-stories/args\\n\\nexport const Default = Template.bind({});\\nDefault.args = {\\n  visible: true,\\n  children: 'This is a modal',\\n};\\n\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Primary\":{\"startLoc\":{\"col\":47,\"line\":15},\"endLoc\":{\"col\":75,\"line\":15},\"startBody\":{\"col\":47,\"line\":15},\"endBody\":{\"col\":75,\"line\":15}},\"Default\":{\"startLoc\":{\"col\":47,\"line\":15},\"endLoc\":{\"col\":75,\"line\":15},\"startBody\":{\"col\":47,\"line\":15},\"endBody\":{\"col\":75,\"line\":15}}};\n    \nimport React from 'react';\nimport { ComponentStory, ComponentMeta } from '@storybook/react';\n\nimport { Modal } from './Modal';\n\n// More on default export: https://storybook.js.org/docs/react/writing-stories/introduction#default-export\nexport default {\n  title: 'Alan/Common/Modal',\n  component: Modal,\n  // More on argTypes: https://storybook.js.org/docs/react/api/argtypes\n  argTypes: {},\n} as ComponentMeta<typeof Modal>;\n\n// More on component templates: https://storybook.js.org/docs/react/writing-stories/introduction#using-args\nconst Template: ComponentStory<typeof Modal> = (args) => <Modal {...args}/>;\n\nexport const Primary = Template.bind({});;\n// More on args: https://storybook.js.org/docs/react/writing-stories/args\n\nexport const Default = Template.bind({});\nDefault.args = {\n  visible: true,\n  children: 'This is a modal',\n};\n\n\n\n\nPrimary.parameters = { storySource: { source: \"(args) => <Modal {...args}/>\" }, ...Primary.parameters };\nDefault.parameters = { storySource: { source: \"(args) => <Modal {...args}/>\" }, ...Default.parameters };","import {Button} from './Button'\nexport default Button","import React from \"react\";\nimport cx from \"classnames\";\nimport ModalContainer from \"./ModalContainer\";\nimport { ModalHeader } from \"./ModalHeader\";\nimport { ModalFooter } from \"./ModalFooter\";\n\ntype Props = {\n  visible?: boolean;\n  maskClass?: string;\n  modalClass?: string;\n  headerClass?: string;\n  bodyClass?: string;\n  footerClass?: string;\n  title?: string;\n  header?: string | React.ReactNode | null;\n  footer?: string | React.ReactNode | null;\n  maskClosable?: boolean;\n  children?: string | React.ReactNode;\n  cancelText?: string;\n  okText?: string;\n  onClose?: () => void;\n  onCancel?: () => void;\n  onOk?: () => void;\n};\n\nexport const Modal = ({\n  maskClass,\n  modalClass,\n  headerClass,\n  bodyClass,\n  footerClass,\n  title,\n  header,\n  footer,\n  maskClosable = true,\n  visible,\n  children = \"\",\n  cancelText = \"Cancel\",\n  okText = \"Ok\",\n  onClose,\n  onCancel,\n  onOk,\n}: Props) => {\n  const modalRef = React.useRef<any>(null);\n\n  const handleMaskClick = (event: any) => {\n    if (maskClosable && !modalRef?.current?.contains(event?.target)) {\n      onClose && onClose();\n    }\n  };\n\n  return (\n    <div>\n      <ModalContainer>\n        {header === null && null}\n        {header && header}\n        {!header && (\n          <ModalHeader\n            title={title}\n            onClose={onClose}\n            className={headerClass}\n          />\n        )}\n        <div className={cx(\"flex-1 p-4\", bodyClass)}>{children}</div>\n        {footer === null && null}\n        {footer && footer}\n        {!footer && (\n          <ModalFooter\n            className={footerClass}\n            cancelText={cancelText}\n            okText={okText}\n            onCancel={onCancel}\n            onOk={onOk}\n          />\n        )}\n      </ModalContainer>\n    </div>\n  );\n};\n","import React from \"react\";\nimport cx from \"classnames\";\n\ntype Props = React.DetailedHTMLProps<\n  React.HTMLAttributes<HTMLDivElement>,\n  HTMLDivElement\n> & {\n  className?: string;\n  width?: string;\n  children?: string | React.ReactNode;\n};\n\nconst ModalContainer = (\n  { className, width = \"520px\", children, ...rest }: Props,\n  ref: any\n) => {\n  const widthStyle = React.useMemo(() => {\n    return `w-[${width}]`;\n  }, [width]);\n  return (\n    <div\n      ref={ref}\n      className={cx(\n        \"h-max min-h-min-modal min-w-min-modal z-10 bg-white rounded\",\n        \"flex flex-col justify-between animation-blowUp\",\n        widthStyle\n      )}\n      {...rest}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default React.forwardRef(ModalContainer);\n","import React from 'react';\nimport cx from 'classnames';\nimport { Button } from '../index';\n\ntype Props = {\n  className?: string;\n  cancelText: string;\n  okText: string;\n  onCancel?: () => void;\n  onOk?: () => void;\n}\n\nexport const ModalFooter = ({\n  className,\n  cancelText,\n  okText,\n  onCancel,\n  onOk,\n}: Props) => {\n  const handleCancel = () => {\n    onCancel && onCancel()\n  }\n\n  const handleOk = () => {\n    onOk && onOk()\n  }\n\n  return (\n    <div className={cx('h-16 border-t border-bd-modal flex items-center justify-end p-4', className)}>\n      <Button buttonType='default' size=\"large\" className=\"w-24\" onClick={() => handleCancel()}>\n        {cancelText}\n      </Button>\n      <Button buttonType='primary' size=\"large\" className=\"w-24 ml-4\" onClick={() => handleOk()}>\n        {okText}\n      </Button>\n    </div>\n  )\n}","import {Button, Title} from '../index'\nimport cx from 'classnames'\nimport React from 'react'\n\ntype Props = {\n  className?: string;\n  title?: string;\n  onClose?: () => void;\n}\n\nexport const ModalHeader = ({\n  className,\n  title = 'Title',\n  onClose,\n}: Props) => {\n\n  const handleClose = () => {\n    onClose && onClose()\n  }\n\n  return (\n    <div className={cx('relative h-16 flex justify-center items-center border-b border-bd-modal', className)}>\n      <Title level={3}>{title}</Title>\n      <Button buttonType='text' className='absolute right-0 text-xl font-semibold' onClick={() => handleClose()}>\n        &#10005;\n      </Button>\n    </div>\n  )\n}","import React from 'react'\nimport cx from 'classnames'\n\ntype Props = {\n  className?: string;\n  level?: 1 | 2 | 3 | 4 | 5;\n  copyable?: boolean;\n  children?: string | React.ReactNode;\n}\n\nexport const Title = ({\n  level = 1,\n  copyable = false,\n  children,\n  className,\n}: Props) => {\n  const Heading = `h${level}` as React.ElementType;\n  const fontSize = React.useMemo(() => {\n    if(level === 5) return 'text-h5 leading-h5'\n    if(level === 4) return 'text-h4 leading-h4'\n    if(level === 3) return 'text-h3 leading-h3'\n    if(level === 2) return 'text-h2 leading-h2'\n    return 'text-h1 leading-h1'\n  }, [level])\n  return (\n    <Heading className={cx('text-txt-black font-medium', fontSize, className)}>{children}</Heading>\n  );\n};","import Button from './Button'\nimport {Title} from './Typography'\n\nimport '../styles/base.scss'\n\nexport { Button, Title }"],"names":[],"sourceRoot":""}